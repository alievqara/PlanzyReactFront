import React, { useState, useEffect } from "react";
import TabNavigation from "../../components/settings/TabNavigation";
import TabGeneralInfo from "../../components/settings/TabGeneralInfo";
import TabSubdomain from "../../components/settings/TabSubdomain";
import TabServices from "../../components/settings/TabServices";
import TabSchedule from "../../components/settings/TabSchedule";
import TabHolidays from "../../components/settings/TabHolidays";
import TabLocation from "../../components/settings/TabLocation";
import NoCompanyState from "../../components/settings/NoCompanyState";
import LoadingScreen from "../../components/common/LoadingScreen";

import {
  getMyCompany,
  createCompany,
  updateCompany,
  deleteCompany,
} from "../../API/companyApi";

const tabs = [
  { key: "general", label: "üìù –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" },
  { key: "subdomain", label: "üåê –°—É–±–¥–æ–º–µ–Ω" },
  { key: "services", label: "üõ†Ô∏è –£—Å–ª—É–≥–∏" },
  { key: "schedule", label: "üìÜ –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã" },
  { key: "holidays", label: "üéâ –ü—Ä–∞–∑–¥–Ω–∏–∫–∏" },
  { key: "location", label: "üìç –õ–æ–∫–∞—Ü–∏—è" },
];

export default function CompanySettings() {
  const [company, setCompany] = useState(null);
  const [activeTab, setActiveTab] = useState("general");
  const [loading, setLoading] = useState(true);

  // üìå –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏
  const loadCompany = async () => {
    setLoading(true);
    try {
      const data = await getMyCompany();
      setCompany(data);
    } catch (err) {
      console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏", err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    loadCompany();
  }, []);

  // üìå –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
  const handleCreateCompany = async (data) => {
    try {
      const newCompany = await createCompany(data);
      setCompany(newCompany);
    } catch (err) {
      console.error(err);
      alert("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏—é");
    }
  };

  // üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
  const handleUpdateCompany = async (data) => {
    try {
      const updated = await updateCompany(data);
      setCompany(updated);
    } catch (err) {
      console.error(err);
      alert("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏");
    }
  };

  // üìå –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
  const handleDeleteCompany = async () => {
    if (!window.confirm("‚ùó –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é?")) return;
    try {
      await deleteCompany();
      setCompany(null);
    } catch (err) {
      console.error(err);
      alert("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é");
    }
  };

  // üìå –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
  if (loading) return <LoadingScreen text="–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏..." />;

  // üìå –ï—Å–ª–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ—Ç
  if (!company) {
    return <NoCompanyState onCreate={handleCreateCompany} />;
  }

  // üìå –ï—Å–ª–∏ –∫–æ–º–ø–∞–Ω–∏—è –µ—Å—Ç—å
  return (
    <div className="company-settings">
      <TabNavigation tabs={tabs} activeTab={activeTab} onTabChange={setActiveTab} />

      <div className="tab-content">
        {activeTab === "general" && (
          <TabGeneralInfo company={company} onUpdate={handleUpdateCompany} />
        )}
        {activeTab === "subdomain" && (
          <TabSubdomain company={company} onUpdate={handleUpdateCompany} />
        )}
        {activeTab === "services" && (
          <TabServices company={company} onUpdate={handleUpdateCompany} />
        )}
        {activeTab === "schedule" && (
          <TabSchedule company={company} onUpdate={handleUpdateCompany} />
        )}
        {activeTab === "holidays" && (
          <TabHolidays company={company} onUpdate={handleUpdateCompany} />
        )}
        {activeTab === "location" && (
          <TabLocation company={company} onUpdate={handleUpdateCompany} />
        )}
      </div>

      <div style={{ marginTop: "20px" }}>
        <button className="delete-button" onClick={handleDeleteCompany}>
          üóë –£–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é
        </button>
      </div>
    </div>
  );
}
